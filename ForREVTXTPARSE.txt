# Import necessary libraries
import pandas as pd
from ayx import Alteryx

# Read the incoming data
df = Alteryx.read("#1")

# Define the function to parse each record
def parse_combined_record(record):
    columns = ['SECURITY', 'CUSIP', 'SECURITY_DESC', 'STOCK_REC_QTY', 'CMS_SEG_QTY', 'CAMS_SEG_QTY', 
               'DTC_QTY', 'NON_DTC_GCL', 'OPT_SEG_QTY', 'TOTAL']
    
    # Forward parsing for SECURITY and CUSIP
    parts = record.split()
    security = parts[0]
    cusip = parts[1]
    
    # Determine the starting index for SECURITY_DESC
    desc_start_idx = len(security) + 1 + len(cusip) + 1
    
    # Reverse parsing for STOCK_REC_QTY to TOTAL
    reverse_parts = record[desc_start_idx:].split()[::-1]
    total = reverse_parts[0]
    opt_seg_qty = reverse_parts[1]
    non_dtc_gcl = reverse_parts[2]
    dtc_qty = reverse_parts[3]
    cams_seg_qty = reverse_parts[4]
    cms_seg_qty = reverse_parts[5]
    stock_rec_qty = reverse_parts[6]
    
    # Determine the ending index for SECURITY_DESC
    desc_end_idx = len(record) - (len(total) + 1 + len(opt_seg_qty) + 1 + len(non_dtc_gcl) + 1 + 
                                  len(dtc_qty) + 1 + len(cams_seg_qty) + 1 + len(cms_seg_qty) + 1 + 
                                  len(stock_rec_qty) + 1)
    
    # Extract SECURITY_DESC
    security_desc = record[desc_start_idx:desc_end_idx].strip()
    
    # Create a dictionary for the parsed columns
    parsed_data = {
        'SECURITY': security,
        'CUSIP': cusip,
        'SECURITY_DESC': security_desc,
        'STOCK_REC_QTY': stock_rec_qty,
        'CMS_SEG_QTY': cms_seg_qty,
        'CAMS_SEG_QTY': cams_seg_qty,
        'DTC_QTY': dtc_qty,
        'NON_DTC_GCL': non_dtc_gcl,
        'OPT_SEG_QTY': opt_seg_qty,
        'TOTAL': total
    }
    
    return parsed_data

# Apply the function to the dataframe
parsed_records = df['CombinedRecord'].apply(parse_combined_record)
parsed_df = pd.DataFrame(parsed_records.tolist())

# Output the parsed dataframe
Alteryx.write(parsed_df, 1)
