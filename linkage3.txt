import pandas as pd

# Read input data frames
df_raid = Alteryx.read("#1")  # Output from the initial RAID linking script
df_relationships = Alteryx.read("#2")  # Relationship table

# Initialize output DataFrame
df_output = pd.DataFrame(columns=['RAID Key', 'Program JIRA Key', 'Project JIRA Key'])

# Process Relationships
for raid_key in df_raid['RAID Key'].unique():
    # Get all Program JIRA Keys and Project JIRA Keys linked to the RAID Key
    linked_programs = df_raid[df_raid['RAID Key'] == raid_key]['Linked Program(s)'].dropna().unique()
    linked_projects = df_raid[df_raid['RAID Key'] == raid_key]['Linked Project(s)'].dropna().unique()
    
    # Convert linked keys from comma-separated strings to lists
    linked_programs = [key for sublist in linked_programs for key in sublist.split(',')]
    linked_projects = [key for sublist in linked_projects for key in sublist.split(',')]
    
    # Process each Program JIRA Key
    for program_key in linked_programs:
        if program_key in df_relationships['Program JIRA Key'].values:
            # Process each Project JIRA Key linked to the same RAID Key
            for project_key in linked_projects:
                if project_key in df_relationships['Project JIRA Key'].values:
                    # Check if the Project JIRA Key shares a relationship with the Program JIRA Key
                    relationship_exists = df_relationships[
                        (df_relationships['Program JIRA Key'] == program_key) & 
                        (df_relationships['Project JIRA Key'] == project_key)
                    ].shape[0] > 0
                    if relationship_exists:
                        # Add a record to the output DataFrame
                        df_output = df_output.append({
                            'RAID Key': raid_key,
                            'Program JIRA Key': program_key,
                            'Project JIRA Key': project_key
                        }, ignore_index=True)
    
    # Add unique Program JIRA Keys that do not share a relationship
    for program_key in linked_programs:
        if program_key not in df_output['Program JIRA Key'].values:
            df_output = df_output.append({
                'RAID Key': raid_key,
                'Program JIRA Key': program_key,
                'Project JIRA Key': None
            }, ignore_index=True)
    
    # Add unique Project JIRA Keys that do not share a relationship
    for project_key in linked_projects:
        if project_key not in df_output['Project JIRA Key'].values:
            df_output = df_output.append({
                'RAID Key': raid_key,
                'Program JIRA Key': None,
                'Project JIRA Key': project_key
            }, ignore_index=True)

# Remove duplicates
df_output.drop_duplicates(inplace=True)

# Write the processed data back to Alteryx
Alteryx.write(df_output, 1)  # Output: Linked RAID Keys with Programs and Projects
