import pandas as pd

# Read input data frames
df_raid = Alteryx.read("#1")  # Output from the first Python script
df_relationships = Alteryx.read("#2")  # Relationship table

# Initialize new DataFrame for output
output_columns = ['RAID Key', 'Program JIRA Key', 'Project JIRA Key', 'Business Outcome JIRA Key']
df_output = pd.DataFrame(columns=output_columns)

# Function to add rows to the output DataFrame
def add_to_output(raid_key, program_key, project_key, bo_key):
    new_row = {
        'RAID Key': raid_key,
        'Program JIRA Key': program_key,
        'Project JIRA Key': project_key,
        'Business Outcome JIRA Key': bo_key
    }
    return new_row

# Process each unique Program JIRA key
for program_key in df_relationships['Program JIRA Key'].unique():
    if pd.notna(program_key):
        # Find RAID keys associated with the Program
        related_raids = df_raid[df_raid['Linked Program(s)'].str.contains(program_key, na=False)]['RAID Key'].unique()
        for raid_key in related_raids:
            # Find Projects linked to both the Program and RAID key
            project_keys = df_relationships[(df_relationships['Program JIRA Key'] == program_key)]['Project JIRA Key'].unique()
            for project_key in project_keys:
                if pd.notna(project_key):
                    df_output = df_output.append(add_to_output(raid_key, program_key, project_key, None), ignore_index=True)

# Process each unique Project JIRA key that might not have a Program relationship
for project_key in df_relationships['Project JIRA Key'].unique():
    if pd.notna(project_key):
        related_raids = df_raid[df_raid['Linked Project(s)'].str.contains(project_key, na=False)]['RAID Key'].unique()
        for raid_key in related_raids:
            if not any((df_output['RAID Key'] == raid_key) & (df_output['Project JIRA Key'] == project_key)):
                df_output = df_output.append(add_to_output(raid_key, None, project_key, None), ignore_index=True)

# Process each unique Business Outcome JIRA key
for bo_key in df_relationships['Business Outcome JIRA Key'].unique():
    if pd.notna(bo_key):
        related_raids = df_raid[df_raid['Linked BO(s)'].str.contains(bo_key, na=False)]['RAID Key'].unique()
        for raid_key in related_raids:
            related_rows = df_relationships[(df_relationships['Business Outcome JIRA Key'] == bo_key)]
            for _, row in related_rows.iterrows():
                program_key = row['Program JIRA Key']
                project_key = row['Project JIRA Key']
                df_output = df_output.append(add_to_output(raid_key, program_key, project_key, bo_key), ignore_index=True)

# Write the processed data back to Alteryx
Alteryx.write(df_output, 1)  # Single output
